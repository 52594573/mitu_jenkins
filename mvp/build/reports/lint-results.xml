<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 3.0.1">

    <issue
        id="ObsoleteLintCustomCheck"
        severity="Warning"
        message="Lint found one or more custom checks using its older Java API; these checks are still run in compatibility mode, but this causes duplicated parsing, and in the next version lint will no longer include this legacy mode. Make sure the following lint detectors are upgraded to the new API: butterknife.lint.InvalidR2UsageDetector"
        category="Lint"
        priority="10"
        summary="Obsolete custom lint check"
        explanation="Lint can be extended with &quot;custom checks&quot;: additional checks implemented by developers and libraries to for example enforce specific API usages required by a library or a company coding style guideline.&#xA;&#xA;The Lint APIs are not yet stable, so these checks may either cause a performance, degradation, or stop working, or provide wrong results.&#xA;&#xA;This warning flags custom lint checks that are found to be using obsolete APIs and will need to be updated to run in the current lint environment.">
        <location
            file="/var/lib/jenkins/workspace/final/mvp"/>
    </issue>

    <issue
        id="CommitPrefEdits"
        severity="Warning"
        message="`SharedPreferences.edit()` without a corresponding `commit()` or `apply()` call"
        category="Correctness"
        priority="6"
        summary="Missing `commit()` on `SharedPreference` editor"
        explanation="After calling `edit()` on a `SharedPreference`, you must call `commit()` or `apply()` on the editor to save the results."
        errorLine1="        sharedPreferences = context.getSharedPreferences(SP_NAME, Context.MODE_PRIVATE);"
        errorLine2="                                                                                     ^"
        quickfix="studio">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/cache/SharedPref.java"
            line="22"
            column="86"/>
    </issue>

    <issue
        id="TrulyRandom"
        severity="Warning"
        message="Potentially insecure random numbers on Android 4.3 and older. Read https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html for more info."
        category="Security"
        priority="9"
        summary="Weak RNG"
        explanation="Key generation, signing, encryption, and random number generation may not receive cryptographically strong values due to improper initialization of the underlying PRNG on Android 4.3 and below.&#xA;&#xA;If your application relies on cryptographically secure random number generation you should apply the workaround described in https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html .&#xA;&#xA;This lint rule is mostly informational; it does not accurately detect whether cryptographically secure RNG is required, or whether the workaround has already been applied. After reading the blog entry and updating your code if necessary, you can disable this lint issue."
        url="https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html"
        urls="https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html"
        errorLine1="            cipher.init(Cipher.ENCRYPT_MODE, k);"
        errorLine2="                   ~~~~">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/kit/Codec.java"
            line="275"
            column="20"/>
    </issue>

    <issue
        id="BadHostnameVerifier"
        severity="Warning"
        message="`verify` always returns `true`, which could cause insecure network traffic due to trusting TLS/SSL server certificates for wrong hostnames"
        category="Security"
        priority="6"
        summary="Insecure HostnameVerifier"
        explanation="This check looks for implementations of `HostnameVerifier` whose `verify` method always returns true (thus trusting any hostname) which could result in insecure network traffic caused by trusting arbitrary hostnames in TLS/SSL certificates presented by peers."
        errorLine1="    private class UnSafeHostnameVerifier implements HostnameVerifier {"
        errorLine2="                                                      ~~~~~~">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/net/Https.java"
            line="59"
            column="55"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkClientTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        errorLine1="    private static class UnSafeTrustManager implements X509TrustManager {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/net/Https.java"
            line="66"
            column="48"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkServerTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        errorLine1="                throws CertificateException {"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/net/Https.java"
            line="69"
            column="28"/>
    </issue>

    <issue
        id="TrustAllX509TrustManager"
        severity="Warning"
        message="`checkClientTrusted` is empty, which could cause insecure network traffic due to trusting arbitrary TLS/SSL certificates presented by peers"
        category="Security"
        priority="6"
        summary="Insecure TLS/SSL trust manager"
        explanation="This check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers."
        errorLine1="            defaultTrustManager = chooseTrustManager(var4.getTrustManagers());"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/net/Https.java"
            line="167"
            column="20"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `Cursor` should be freed up after use with `#close()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="            if (takePictureIntent.resolveActivity(activity.getPackageManager()) != null) {"
        errorLine2="                              ~~~~~">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/kit/Kits.java"
            line="1283"
            column="31"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `Cursor` should be freed up after use with `#close()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="        Cursor cursor = context.getContentResolver().query(uri, proj, null, null, null);"
        errorLine2="                     ~~~~~">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/kit/PictureUtils.java"
            line="33"
            column="22"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `Cursor` should be freed up after use with `#close()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="        String fileName = System.currentTimeMillis() + &quot;.jpg&quot;;"
        errorLine2="                                                      ~~~~~">
        <location
            file="/var/lib/jenkins/workspace/final/mvp/src/main/java/cn/droidlover/xdroidmvp/kit/PictureUtils.java"
            line="244"
            column="55"/>
    </issue>

</issues>
